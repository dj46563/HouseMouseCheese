/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Mon Oct 28 21:26:56 2019. */

#ifndef PB_CHEESE_CHEESE_PB_H_INCLUDED
#define PB_CHEESE_CHEESE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _cheese_Frame {
    pb_callback_t pixels;
/* @@protoc_insertion_point(struct:cheese_Frame) */
} cheese_Frame;

typedef struct _cheese_Pattern {
    int32_t width;
    int32_t height;
    float frames_per_beat;
    int32_t unique_cycles;
    pb_callback_t frames;
/* @@protoc_insertion_point(struct:cheese_Pattern) */
} cheese_Pattern;

/* Default values for struct fields */

/* Initializer values for message structs */
#define cheese_Frame_init_default                {{{NULL}, NULL}}
#define cheese_Pattern_init_default              {0, 0, 0, 0, {{NULL}, NULL}}
#define cheese_Frame_init_zero                   {{{NULL}, NULL}}
#define cheese_Pattern_init_zero                 {0, 0, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define cheese_Frame_pixels_tag                  3
#define cheese_Pattern_width_tag                 1
#define cheese_Pattern_height_tag                2
#define cheese_Pattern_frames_per_beat_tag       3
#define cheese_Pattern_unique_cycles_tag         4
#define cheese_Pattern_frames_tag                5

/* Struct field encoding specification for nanopb */
extern const pb_field_t cheese_Frame_fields[2];
extern const pb_field_t cheese_Pattern_fields[6];

/* Maximum encoded size of messages (where known) */
/* cheese_Frame_size depends on runtime parameters */
/* cheese_Pattern_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CHEESE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
